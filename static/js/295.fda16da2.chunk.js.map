{"version":3,"file":"static/js/295.fda16da2.chunk.js","mappings":"yMACA,EAAuB,mBAAvB,EAAmD,qBAAnD,EAAiF,qBAAjF,EAA8G,oB,kBC+D9G,EA5Da,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA2BR,OAzBAE,EAAAA,EAAAA,YAAU,WAENC,MAAM,sCAAD,OACmCH,EADnC,sDAGFI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,IACRF,MAAK,SAAAC,GACJ,IAAME,EAASF,EAAIG,KAAKC,KACtB,kBAA0D,CACxDC,QADF,EAAGA,QAEDC,UAFF,EAAYA,UAGVC,cAHF,EAAuBA,cAIrBC,aAJF,EAAsCA,aAAtC,IASFd,EAAYQ,EACb,IACAO,OAAM,SAAAC,GAAE,OAAIC,QAAQC,IAAIF,EAAGG,QAAnB,GAId,GAAE,CAAClB,KAGF,gBAAKmB,UAAWC,EAAhB,SACGtB,EAASuB,OAAS,GACjB,eAAIF,UAAWC,EAAf,SACGtB,GACCA,EAASW,KACP,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,aAAtC,OACE,gBAAkBM,UAAWC,EAA7B,WACE,gBAAKD,UAAWC,EAAhB,SACGP,GACC,gBACES,IAAG,8CAAyCT,GAC5CU,IAAI,oBAGN,gBAGJ,uBAAIX,KACJ,yBAAG,cAAYD,OAZRD,EADX,MAmBN,kBAIP,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.scss?a69e","pages/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__pHnmh\",\"castUl\":\"Cast_castUl__cIhGR\",\"castLi\":\"Cast_castLi__cn7Fy\",\"thumb\":\"Cast_thumb__Y3jLD\"};","import { useEffect, useState } from 'react';\nimport css from './Cast.module.scss';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [dataCast, setDataCast] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastMovie = () => {\n      fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=225e339996bc91260b33199c383c8881`\n      )\n        .then(res => res.json())\n        .then(res => {\n          const needed = res.cast.map(\n            ({ cast_id, character, original_name, profile_path }) => ({\n              cast_id,\n              character,\n              original_name,\n              profile_path,\n            })\n          );\n\n          // console.log(needed);\n          setDataCast(needed);\n        })\n        .catch(er => console.log(er.message));\n    };\n\n    getCastMovie();\n  }, [movieId]);\n\n  return (\n    <div className={css.cast}>\n      {dataCast.length > 0 ? (\n        <ul className={css.castUl}>\n          {dataCast &&\n            dataCast.map(\n              ({ cast_id, character, original_name, profile_path }) => (\n                <li key={cast_id} className={css.castLi}>\n                  <div className={css.thumb}>\n                    {profile_path ? (\n                      <img\n                        src={`https://image.tmdb.org/t/p/original/${profile_path}`}\n                        alt=\"person portrait\"\n                      ></img>\n                    ) : (\n                      '|No photo|'\n                    )}\n                  </div>\n                  <p>{original_name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              )\n            )}\n        </ul>\n      ) : (\n        'Sorry, No Cast'\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","dataCast","setDataCast","movieId","useParams","useEffect","fetch","then","res","json","needed","cast","map","cast_id","character","original_name","profile_path","catch","er","console","log","message","className","css","length","src","alt"],"sourceRoot":""}