{"version":3,"file":"static/js/916.90f744ff.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Card/Card.module.scss?2b03","components/Card/Card.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.scss?57ee","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__zQfcO\",\"thumb\":\"Card_thumb__rqUeD\",\"description\":\"Card_description__ZISe4\"};","import css from './Card.module.scss';\n\nconst Card = ({\n  posterPath,\n  title,\n  releaseDate,\n  voteAverage,\n  overview,\n  genres,\n}) => {\n  return (\n    <div className={css.card}>\n      <div className={css.thumb}>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${posterPath}`}\n          alt=\"film backdrop\"\n        ></img>\n      </div>\n      <div className={css.description}>\n        <h3>{`${title} (${releaseDate})`}</h3>\n\n        <p>{`User Score: ${(Number(voteAverage) * 10).toFixed(0)}%`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"linkBack\":\"MovieDetails_linkBack__z57Mc\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Card from 'components/Card/Card';\nimport css from './MovieDetails.module.scss';\n\nconst MovieDetails = () => {\n  const [responseStatus, setResponseStatus] = useState('ok');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [posterPath, setPosterPath] = useState('');\n  const [voteAverage, setVoteAverage] = useState('');\n  const [genresIds, setGenresIds] = useState('');\n  const [overview, setOverview] = useState('');\n  const [title, setTitle] = useState('');\n  const [genres, setGenres] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const prevPath = useRef('');\n\n  useEffect(() => {\n    prevPath.current = location;\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    const getDataMovie = () => {\n      fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=225e339996bc91260b33199c383c8881`\n      )\n        .then(res => res.json())\n        .then(res => {\n          if (res.id) {\n            // console.log(res);\n            const {\n              release_date,\n              poster_path,\n              vote_average,\n              genres,\n              overview,\n              title,\n            } = res;\n\n            setReleaseDate(release_date);\n            setPosterPath(poster_path);\n            setVoteAverage(vote_average);\n            setGenresIds(genres);\n            setOverview(overview);\n            setTitle(title);\n          }\n          if (res.success === false) {\n            // console.log(res);\n            setResponseStatus(res.status_message);\n            throw new Error(`${res.status_message}`);\n          }\n        })\n        .catch(er => console.log(er.message));\n    };\n\n    getDataMovie();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (genresIds) {\n      setGenres(genresIds.map(({ name }) => name).join(', '));\n    }\n  }, [genresIds]);\n\n  return (\n    // location.state?|если такое свойство существует, то берем вложенное-|.from\n    <>\n      <Link to={prevPath.current.state?.from} className={css.linkBack}>\n        Go back\n      </Link>\n\n      {responseStatus === 'ok' ? (\n        <div>\n          <Card\n            posterPath={posterPath}\n            title={title}\n            releaseDate={releaseDate}\n            voteAverage={voteAverage}\n            overview={overview}\n            genres={genres}\n          />\n\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n\n          <Suspense\n            fallback={\n              <ThreeDots\n                height=\"80\"\n                width=\"80\"\n                radius=\"9\"\n                color=\"#4fa94d\"\n                ariaLabel=\"three-dots-loading\"\n                wrapperStyle={{}}\n                wrapperClassName=\"\"\n                visible={true}\n              />\n            }\n          >\n            <Outlet />\n          </Suspense>\n        </div>\n      ) : (\n        <p>{responseStatus}</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["posterPath","title","releaseDate","voteAverage","overview","genres","className","css","src","alt","Number","toFixed","useState","responseStatus","setResponseStatus","setReleaseDate","setPosterPath","setVoteAverage","genresIds","setGenresIds","setOverview","setTitle","setGenres","movieId","useParams","location","useLocation","prevPath","useRef","useEffect","current","fetch","then","res","json","id","release_date","poster_path","vote_average","success","status_message","Error","catch","er","console","log","message","map","name","join","to","state","from","Suspense","fallback","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}